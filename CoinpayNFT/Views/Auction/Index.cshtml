<section class="browse-product-area page-paddings">
    <div class="container">



        <div class="row">


            <div class="col-xl-3 col-lg-4 col-md-4 col-sm-12 col-12">
                <div class="browse-product-filter">
                    <div class="filter-box">
                        <h3 class="theme-title">Categories</h3>

                        <div class="filter-menu">
                            <select name="category" id="category" class="form-control" required>
                                <option value="">All Categories</option>
                                <option value="real estate" selected>Real Estate</option>
                                @*<option value="art">Art</option>
        <option value="collectibles">Collectibles</option>
        <option value="game items">Game Items</option>
        <option value="music">Music</option>
        <option value="domains">Domains</option>
        <option value="templates">Templates</option>
        <option value="videos">Videos</option>*@
                            </select>

                        </div>
                    </div>

                </div>
            </div>
            <div class="col-xl-9 col-lg-8 col-md-8 col-sm-12 col-12">
                @*<div class="browse-product-top">
                    <div class="row">
                        <div class="col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12">
                            <div class="browse-product-left">
                                <div class="browse-search-box">
                                    <input type="text" class="browse-search-input" placeholder="Search...">
                                    <button class="browse-search-btn"><i class="fas fa-search"></i></button>
                                </div>
                            </div>
                        </div>
                        <div class="col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12">
                            <div class="browse-product-right clearfix">
                                <ul class="nav nav-tabs" role="tablist">
                                    <li class="nav-item"><a class="browse-list nav-link active" data-toggle="tab" href="#view-store-grid" role="tab" data-placement="top" title="View Stores"><i class="fas fa-th-large"></i></a></li>
                                    <li class="nav-item"><a class="browse-list nav-link" data-toggle="tab" href="#view-store" role="tab" data-placement="top" title="View Stores"><i class="fas fa-th-list"></i></a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>*@
                <div class="browse-product-box">
                    <div class="tab-content">
                        <div class="tab-pane active" id="view-store-grid" role="tabpanel">
                            <div class="row" id="auctionsRow">

                                <!-- auctions load here --><div id="Loading">Loading...</div>
                            </div>
                            <a type="button" class="hide" id="btnCategory" href=""></a>
                        </div>

                        <div class="tab-pane" id="view-store" role="tabpanel">
                            <div class="row">
                                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
                                    <div class="view-store-item">
                                        <span class="store-label">Boosted</span>
                                        <div class="view-store-box">
                                            <div class="view-store-images">
                                                <a href="view-detail.html"><img src="~/nft/public/images/category/template/art_1.png" alt="Catagory-template-art-piece-image"></a>
                                            </div>
                                            <div class="view-store-info">
                                                <h3 class="theme-title"><a href="view-detail.html">Get Best Template Here</a></h3>
                                                <div class="store-ratting">
                                                    <i class="fas fa-star-half-alt"></i><i class="fas fa-star-half-alt"></i><i class="fas fa-star-half-alt"></i><i class="fas fa-star-half-alt"></i><i class="fas fa-star-half-alt"></i> (4.5)
                                                </div>
                                                <ul>
                                                    <li>Store : <span>StidioFest (3 Items)</span></li>
                                                    <li>Owner : <span>StidioFest</span></li>
                                                </ul>
                                                <div class="item-group-box clearfix">
                                                    <div class="item-group-timer">
                                                        <ul class="clearfix">
                                                            <li><span>01</span> Hour</li>
                                                            <li><span>55</span> Min</li>
                                                            <li><span>00</span> Sec</li>
                                                        </ul>
                                                    </div>
                                                    <div class="item-group-bid">
                                                        <p class="theme-description">Starting bid:</p>
                                                        <h2>$ 0.980</h2>
                                                    </div>
                                                </div>
                                                <div class="item-group-btn">
                                                    <a class="theme-btn" href="view-detail.html">Buy Now</a>
                                                </div>
                                            </div>
                                        </div>
                                        <p class="theme-description browse-description">We have make really perfect template for website with great features and customizable option.</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
                            <div class="pagination-box text-center">
                                <ul class="clearfix">
                                    <li class="current"><span>1</span></li>
                                    <li><a href="#">Next <i class="fas fa-long-arrow-alt-right"></i></a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<div id="">
    <div class="">
        @{ Html.RenderPartial("~/Views/Auction/_auction-template.cshtml");}
    </div>
    <div class="">
        @{ Html.RenderPartial("~/Views/Auction/_view-auction-modal.cshtml");}
    </div>
</div>

<script>
    function MyFunction(event) {
        var $evnt = $(event.target);
        console.log($evnt.closest('.panel-body').attr('data-auction-id'))
        $evnt.attr('href', '/auction/viewdetail?auctionId=' + $evnt.closest('.panel-body').attr('data-auction-id'));
        
    }

    $(function () {
        // load navbar and modal
        function constructChart(data) {
            // generate datasets
            let datasets = { time: [], price: [] }

            // calculate step to reduced data granularity
            // (step for time/minutes)
            let step;
            if (data.duration <= 100) {
                step = 1;
            } else if (data.duration <= 1000) {
                step = 10;
            } else if (data.duration <= 10000) {
                step = 100;
            } else if (data.duration <= 100000) {
                step = 1000;
            } else if (data.duration <= 1000000) {
                step = 10000;
            } else {
                step = 100000;
            }

            let i = 0;
            let helper = data.duration;
            while (helper > 0) {
                datasets.time[i] = helper;
                i++;
                helper -= step;
            }
            /*
            console.log('datasets.time:');
            console.log(datasets.time);
            console.log('datasets.time.length: ' + datasets.time.length);
            console.log('data.duration:');
            console.log(data.duration);
            */

            const priceRange = data.startingPrice - data.endingPrice;
            // calculate step for price
            step = priceRange / datasets.time.length;

            i = 0
            helper = data.startingPrice
            while (helper >= data.endingPrice) {
                let price = data.startingPrice - (step * i)
                // round number down to two decimal places
                price = Math.round(price * 100) / 100
                datasets.price[i] = price
                helper -= step
                i++
            }
            /*
            console.log('datasets.price.length: ' + datasets.price.length);
            console.log('datasets.price:');
            console.log(datasets.price);
            */

            // add first & final values
            datasets.time.push(0)
            datasets.price.push(data.endingPrice)

            // construct chart
            // https://github.com/chartjs/chartjs-plugin-annotation
            const annotations = [data.currentPrice].map((value, index) => {
                return {
                    type: 'line',
                    id: 'vline' + index,
                    mode: 'horizontal',
                    scaleID: 'y-axis-time',
                    value: value,
                    borderColor: '#8a2be2',
                    borderWidth: 1,
                    label: {
                        enabled: true,
                        position: 'right',
                        content: '~ ' + Math.round(value * 100) / 100 + ' CPAY'
                    }
                }
            })

            let options = {
                type: 'line',
                data: {
                    labels: datasets.time,
                    datasets: [{
                        label: 'Price [CPAY]',
                        data: datasets.price,
                        type: 'line',
                        pointRadius: 0,
                        fill: true,
                        lineTension: 0,
                        borderWidth: 2,
                        backgroundColor: ['rgba(75, 192, 192, 0.2)'],
                        borderColor: ['rgba(75, 192, 192, 1)']
                    }],
                },
                options: {
                    responsive: true,
                    annotation: {
                        drawTime: 'afterDatasetsDraw',
                        annotations,
                    },
                    scales: {
                        xAxes: [{
                            id: 'x-axis-price',
                            scaleLabel: {
                                display: true,
                                labelString: 'Time [Minutes]'
                            },
                        }],
                        yAxes: [{
                            id: 'y-axis-time',
                            scaleLabel: {
                                display: true,
                                labelString: 'Price [CPAY]'
                            },
                        }]
                    },
                    tooltips: {
                        mode: 'index',
                        intersect: false,
                        callbacks: {
                            label: ({ datasetIndex, yLabel }, { datasets }) => {
                                return `~ ${yLabel} CPAY`
                            }
                        }
                    }
                }
            }
            // build chart
            const chartId = document.getElementById('chart').getContext('2d')
            const chart = new Chart(chartId, options)
            // when closing modal reset chart to avoid displaying errors
            $('#viewAuctionModal').on('hidden.bs.modal', () => {
                chart.destroy()
            });
        }


        // Set the date we're counting down to


        if (!globalCountDownTimerIsOn) {
            var interVal = setInterval(function () {

                globalCountDownTimerIsOn = false;

                // Get today's date and time
                var now = new Date().getTime();

                // Find the distance between now and the count down date
                var distance = countDownDate - now;

                // Time calculations for days, hours, minutes and seconds
                var days = Math.floor(distance / (1000 * 60 * 60 * 24));
                var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                var seconds = Math.floor((distance % (1000 * 60)) / 1000);

                try {
                    // Display the result in the element with id="demo"
                    document.getElementById("demo1").innerHTML = days + "d " + hours + "h "
                        + minutes + "m " + seconds + "s ";

                    // If the count down is finished, write some text
                    if (distance < 0) {
                        //clearInterval(interVal);
                        document.getElementById("demo1").innerHTML = "EXPIRED";
                    }
                } catch (e) {
                    clearInterval(interVal);
                    globalCountDownTimerIsOn = false;
                }

            }, 1000);
        }
        // Update the count down every 1 second

        


        // add 'number to sell' to modal
        $('#auctionsRow').on('click', '.view-auction', async function (event) {

            $('#viewAuctionModal').modal('show');
            const pnelBody = $(this).closest('.panel-body'); // TODO: ugh
            const formattedNumber = pnelBody.find('.number').html()
            const auctionId = pnelBody.attr('data-auction-id')
            const tokenToSell = pnelBody.find('.number').attr('data-token-id')

            const data = {
                auctionId: auctionId,
                tokenId: tokenToSell,
                startingPrice: pnelBody.find('.price-start').text(),
                endingPrice: 0,//parent.find('.price-bid').text(),
                duration: pnelBody.find('.duration').text()
            }
            //alert(data.endingPrice)
            //var dt = new Date(parent.find('#EndDate').text());
            //dt.setSeconds(dt.getSeconds() + data.duration);
            var date = pnelBody.find('#EndDate').text(); //alert(dt.toLocaleString())
            countDownDate = new Date(date).getTime();


            $('#viewAuctionModal .panel-body').attr('data-auction-id', auctionId)
            $('#viewAuctionModal .number').attr('data-token-id', tokenToSell)
            $('#viewAuctionModal .number').html(formattedNumber)

            $('#viewAuctionModal .price-start').text(data.startingPrice)
            //$('#viewAuctionModal .price-bid').text(data.startingPrice)
            $('#viewAuctionModal .duration').text(data.duration);
            console.log(data.startingPrice)
            $('#bidPrice').val(data.startingPrice)
            // https://getbootstrap.com/docs/4.1/components/modal/
            //$('#viewAuctionModal').on('shown.bs.modal', (event) => {
            //    // fit textsize of large numbers in modal
            //    fitty('#viewAuctionModal .number', {
            //        minSize: 20,
            //        maxSize: 60
            //    })
            //})
       
            var o = await contractNFT.getCurrentPriceByAuctionId(auctionId);
           
            // convert bigNumber to int
            var currentPrice = o.toString();// console.log(currentPrice+' hhhhhh');
            // convert wei to ether
            data.currentPrice = ethers.utils.formatEther(currentPrice)

            $('#viewAuctionModal .price-current').text('~ ' + (Math.round(data.currentPrice * 100) / 100))
            //$('#bidPrice').val(data.startingPrice);
            var rslt = await contractNFT.getCurrentBid(auctionId);

            var bidPrice = rslt[0].toString();
            if (bidPrice != '0') {
                console.log(bidPrice)
                bidPrice = ethers.utils.formatEther(bidPrice)

                $('#bidPrice').attr('min', bidPrice).val((parseFloat(bidPrice) + 0.001).toFixed(3))
            } else {
                $('#bidPrice').attr('min', '').val(data.startingPrice)
            }
            //$('#viewAuctionModal .price-current').text('~ ' + bidPrice)
            $('#viewAuctionModal .price-bid').text(bidPrice)


            //alert(data.currentPrice)
            if (data.currentPrice == 0) {
                $('#buyButton').hide()
                $('.btn-success.disabled').show()
            } else {
                // TODO:
                // check if auction has been cancelled or finished
                // - need to get events and check if auction with auctionId is amoung them
                $('#buyButton').show()
                $('.btn-success.disabled').hide()
            }
            console.log(data)
            // create the chart
            constructChart(data);
        })





    })
</script>

<script>
    $("#category").change(function () {
        var $btn = $('#btnCategory');
        $btn.attr('href', '/auction/index?category=' + $(this).val());
        document.getElementById('btnCategory').click();

    });
    var category = '@(Request.QueryString["category"])'; console.log(category);
      $(function () {
          // load navbar and modal
          $('#category').val(category);

          //Auctions.bindEvents();
          fnc();
      });
    async function fnc() {

         category = category == '' ? null : category
        //var iface = new ethers.utils.Interface(abiAuction);
        //event AuctionStatus(string indexed evntName,string indexed category,address msgSender, uint256 indexed auctionId,uint256 price,address coinpayUser);
        var coinpayUser = '@(Request.QueryString["address"])';
        coinpayUser = coinpayUser == '' ? null : coinpayUser;
        var filter = contractNFT.filters.AuctionStatus("AuctionCreated", category, null, null, null, coinpayUser);

        var events = await contractNFT.queryFilter(filter);
        $('#Loading').html('');
        var auctionTemplate = $("#auctionTemplate");

        events.map(async function (log) {
            var auctionId = log.args.auctionId.toString();
            var auction = await contractNFT.getAuctionByAuctionId(auctionId); console.log(auction)

            if (auction.isActive == true) {

                var tokenId = auctionId;//log.args.tokenId.toString();
                var startingPrice = auction.startingPrice.toString();
                var duration = auction.duration.toString();

                //var auction = await contractAuction.getAuctionByAuctionId(auctionId);
                var creationDate = (new Date((auction.startedAt.toString()) * 1000)).toLocaleString();
                console.log(duration + ' date')
                var dt = new Date(creationDate);
                dt.setSeconds(dt.getSeconds() + parseInt(duration));


                var url = await contractNFT.tokenURI(tokenId); console.log(url);
                url = customIpfsPath(url); console.log(url);
                $.ajaxSetup({ async: false });
                $.get(url, function (data) {
                    console.log(url);
                    auctionTemplate
                        .find(".panel-body .number")
                        .html(
                            '<img src="' +
                            customIpfsPath(data.image) +
                            '" alt="image" class="img-fluid img-thumbnail" /> <br> <a href="' +
                            customIpfsPath(data.image) +
                            '" target="_blank">Digital Content Link</a>'
                        );

                });
                $.ajaxSetup({ async: true });

                auctionTemplate
                    .find("#EndDate")
                    .text(dt.toLocaleString());

                auctionTemplate
                    .find(".panel-body")
                    .attr("data-auction-id", auctionId);
                console.log(auctionId);
                auctionTemplate
                    .find(".panel-body .number")
                    .attr("data-token-id", tokenId);
                auctionTemplate
                    .find(".panel-body .price-start")
                    .text(ethers.utils.formatEther(startingPrice)); //alert(ethers.utils.formatEther(startingPrice)); alert(ethers.utils.parseEther(ethers.utils.formatEther(startingPrice)));
                auctionTemplate.find(".panel-body .duration").text(duration / 60);
                //alert(auctionTemplate.html());
                $("#auctionsRow").append(auctionTemplate.html());

                var rslt = await contractNFT.getCurrentBid(auctionId);

                var bidPrice = rslt[0].toString();
                if (bidPrice != "0") {
                    console.log(bidPrice + ' bidPrice')
                    var $tmplt = $("#auctionsRow").find(
                        '[data-auction-id="' + auctionId + '"]'
                    );
                    //$tmplt.html('hello');
                    $tmplt
                        .find(".price-bid")
                        .text(ethers.utils.formatEther(bidPrice));
                    $tmplt.find(".bidder-bid").text(rslt[1].substring(16, 0));
                }

            }
        });

         // fit textsize of large numbers
        //fitty("#auctionsRow .number", {
        //    minSize: 20,
        //    maxSize: 60,
        //});

    }

</script>